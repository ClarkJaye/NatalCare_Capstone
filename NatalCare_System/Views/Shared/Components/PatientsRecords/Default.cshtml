@model List<NatalCare.Models.Entities.Patients>

<div class="table-responsive">
    <table id="patientsTable" class="table table-hover table-striped">
        <thead class="border-bottom-2">
            <tr>
                <th>Profile</th>
                <th>Patient No#</th>
                <th>Firstname</th>
                <th>Middlename</th>
                <th>Lastname</th>
                <th>Age</th>
                <th>Gender</th>
                <th>Address</th>
                <th>Date of Birth</th>
                <th>Date Added</th>
                <th>Added By</th>
                <th class="text-center">ACTION</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var patient in Model)
            {
                @* <tr class="align-middle patient-row" data-url="@Url.Action("Information", "Patient", new { id = patient.PatientID })" style="cursor: pointer;"> *@
                <tr>
                    <td>
                        <img src="~/profile/@(patient.Gender?.ToLower() == "female" ? "woman.png" : "man.png")"
                             width="50" height="50" alt="Profile" class="img-fluid rounded-circle" />
                    </td>
                    <th>@patient.PatientID</th>
                    <td>@patient.FirstName</td>
                    <td>@patient.MiddleName</td>    
                    <td>@patient.LastName</td>
                    <td>
                        @{
                            if (patient.Birthdate.HasValue)
                            {
                                var birthYear = patient.Birthdate.Value.Year;
                                var currentYear = DateTime.Now.Year;
                                var age = currentYear - birthYear;
                                <text>@age years old</text>
                            }
                            else
                            {
                                @:N/A
                            }
                        }
                    </td>
                    <td>@patient.Gender</td>
                    <td>@patient.Address</td>
                    <td>@patient.Birthdate?.ToString("MMM dd, yyyy")</td>
                    <td>@patient.Created_At?.ToString("MMM dd, yyyy hh:mm tt")</td>
                    <td>@(patient.CreatedBy?.FirstName ?? "N/A") @(patient.CreatedBy?.LastName ?? "")</td>
                    <td class="text-center">
                        <div class="d-flex align-items-center justify-content-center gap-2">
                            <a class="btn btn-sm btn-outline-secondary"
                               asp-controller="Patient" asp-action="Information" asp-route-id="@patient.PatientID"
                               title="View Records">
                                <i class="fa-solid fa-folder-open"></i>
                                <span>Records</span>
                            </a>
                            @* Uncomment this section if Delete functionality is required *@
                            @* <button class="btn btn-sm btn-outline-danger dlt-Btn" 
                                        data-patientid="@patient.PatientID" title="Delete Patient">
                                 <i class="fa-solid fa-trash"></i>
                                 <span>Delete</span>
                               </button> *@
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    $(document).ready(function () {
        // Initialize DataTables
        $('#patientsTable').DataTable({
            paging: true,
            lengthChange: true,
            searching: true,
            ordering: true,
            pageLength: 10,
            lengthMenu: [10, 20, 50, 100],
            language: {
                search: "_INPUT_",
                searchPlaceholder: "Search patients...",
                paginate: {
                    previous: "Previous",
                    next: "Next"
                },
                info: "Showing _START_ to _END_ of _TOTAL_ patients"
            },
            autoWidth: false,
            responsive: true,
            columnDefs: [
                { orderable: false, targets: -1 } 
            ]
        });

        $('#patientsTable').on("click", ".dlt-Btn", function (e) {
            var patientid = $(this).data('patientid');
            DeletePatient(patientid);
        });

        // Delete Patient
        function DeletePatient(patientid) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this, but you can see this on deleted history!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'DELETE',
                        url: '@Url.Action("Delete", "Patient")',
                        data: { patientid: patientid },
                        success: function (result) {
                            if (result.isSuccess) {
                                toastr.success(result.message);
                                LoadAllPatientsComponent();
                            } else {
                                toastr.error(result.message);
                            }
                        },
                        error: function () {
                            console.log('Unable to delete the patient.');
                        }
                    });
                }
            });
        }

        // Make rows clickable
        $('.patient-row').on('click', function (e) {
            // Prevent navigation when clicking inside buttons or links
            if (!$(e.target).closest('a, button').length) {
                window.location.href = $(this).data('url');
            }
        });

    });
</script>